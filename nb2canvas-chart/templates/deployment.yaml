apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.deployment.nb2canvas.name }}
  namespace: {{ .Values.namespace.name }}
  labels:
    {{- include "nb2canvas-chart.nbgrader2canvas.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.deployment.nb2canvas.replicaCount }}
  selector:
    matchLabels:
      {{- include "nb2canvas-chart.nbgrader2canvas.labels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "nb2canvas-chart.nbgrader2canvas.labels" . | nindent 8 }}
    spec:
      securityContext:
      {{- if .Values.deployment.development.enabled }}
      tolerations:
      - key: node-role.kubernetes.io/master
        effect: NoSchedule
      {{- end }}
      {{- if .Values.deployment.development.enabled }}
      nodeSelector:
        kubernetes.io/hostname: {{ .Values.deployment.development.hostname }}
      {{- end }}
      containers:
      - name: {{ .Chart.Name }}
        {{- if and (.Values.deployment.development.enabled) (.Values.deployment.development.stdin) }}
        stdin: true
        tty: true
        {{- end }}
        image: {{ .Values.deployment.nb2canvas.image.repo }}:{{ .Values.deployment.nb2canvas.image.tag }}
        ports:
        - containerPort: {{ .Values.deployment.nb2canvas.port }}
        envFrom:
          - secretRef:
              name: {{ .Values.deployment.nb2canvas.secret }}
        volumeMounts:
        # need to get python and jinja files in without overwriting static folder
        # https://github.com/kubernetes/kubernetes/issues/44815#issuecomment-297077509
        {{- range $path, $bytes :=  .Files.Glob  "nbgrader_to_canvas/*" }}
        - mountPath: {{ $.Values.configmap.python.mountPath }}/{{ base $path }}
          name: {{ $.Values.configmap.python.name }}
          subPath: {{ base $path }}
        {{- end }}

        {{ range $path, $bytes :=  .Files.Glob  "nbgrader_to_canvas/templates/*" }}
        - mountPath: {{ $.Values.configmap.jinja.mountPath }}/{{ base $path }}
          name: {{ $.Values.configmap.jinja.name }}
          subPath: {{ base $path }}
        {{ end }}
        
        {{- range $.Values.deployment.nb2canvas.nbgraderfilesystems }}
        - name: {{ .filesystem.name }}
          mountPath: {{ .filesystem.mountPath }}
        {{- end }}
        {{- if .Values.deployment.development.enabled }}
        - mountPath: {{ .Values.deployment.development.mountPath }}
          name: appcode
        {{- end }}
      volumes:
      - name: {{ .Values.configmap.python.name }}
        configMap:
          name: {{ .Values.configmap.python.name }}
      - name: {{ .Values.configmap.jinja.name }}
        configMap:
          name: {{ .Values.configmap.jinja.name }}
      {{- range $.Values.deployment.nb2canvas.nbgraderfilesystems }}
      - name: {{ .filesystem.name }}
        nfs:
          server: {{ .filesystem.server }}
          path: {{ .filesystem.path }}
      {{- end }}
      {{- if .Values.deployment.development.enabled }}
      - name: appcode
        hostPath:
          path: {{ .Values.deployment.development.appHostPath }}
      {{- end }}
      

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.deployment.postgres.name }}
  namespace: {{ .Values.namespace.name }}
  labels:
    {{- include "nb2canvas-chart.postgres.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.deployment.postgres.replicaCount }}
  selector:
    matchLabels:
      {{- include "nb2canvas-chart.postgres.labels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "nb2canvas-chart.postgres.labels" . | nindent 8 }}
    spec:
      containers:
      - name: {{ .Chart.Name }}
        image: {{ .Values.deployment.postgres.image.repo }}
        ports:
        - containerPort: {{ .Values.deployment.postgres.port }}
        envFrom:
          - secretRef:
              name: {{ .Values.deployment.postgres.secret }}
        volumeMounts:
        - mountPath: {{ .Values.deployment.postgres.start.mountPath }}
          name: {{ .Values.deployment.postgres.start.name }}
        - mountPath: {{ .Values.deployment.postgres.pgdata.mountPath }}
          name: {{ .Values.deployment.postgres.pgdata.name }}
      volumes:
      - name: {{ .Values.deployment.postgres.pgdata.name }}
        persistentVolumeClaim:
          claimName: {{ .Values.deployment.postgres.pgdata.claimName }}
      - name: {{ .Values.deployment.postgres.start.name }}
        nfs:
          server: {{ .Values.deployment.postgres.start.server }}
          path: {{ .Values.deployment.postgres.start.path }}   
